#!/usr/bin/env node

const { Keypair } = require('@solana/web3.js')
const bs58 = require('bs58')

const [_nodePath, _thisPath, command] = process.argv

/**
 * Generate Solana account address
 */

function generateKeypair() {
  const pair = Keypair.generate()
  return { publicKey: pair.publicKey.toBase58(), secretKey: bs58.encode(pair.secretKey) }
}

function print(output) {
  if (output == null) {
    console.log('no output')
  }

  if (typeof output === 'string') {
    console.log(output)
    return;
  }

  if (typeof output === 'object' && !Array.isArray(output)) {
    for (key in output) {
      console.log(`${key}: ${output[key]}`)
    }
  }

  console.error(`can't handle output of type \`${typeof output}\``)
}

switch (command) {
  case 'keypair':
    print(generateKeypair())
    break
  case 'publickey':
    print(generateKeypair().publicKey)
    break
  default:
    console.log(`unknown command \`${command}\``)
}
